package APIServer;

import java.io.IOException;
import java.util.Properties;
import java.util.UUID;
import org.restlet.Request;
import org.restlet.data.Form;
import org.restlet.data.MediaType;
import org.restlet.representation.FileRepresentation;
import org.restlet.resource.Get;
import org.restlet.resource.ServerResource;

/**
 * Return wave files generated by calling festival in Terminal.
 * We put all the wave files into folder GeneratedWave
 * the file will be deleted after having been sent to the client
 */

public class Text2Wave extends ServerResource{
	String txt = "";
	String errorWave = "./WaveSource/Error.wav";
	String noAuthorityWave = "./WaveSource/noAuthority.wav";
	String wavePath = Main.wavePath;
	String festivalHome = Main.festivalHome;
	String token = "";
	
	@Get
    public FileRepresentation getResource() {
        System.out.println("handler object = " + this);
        System.out.println("called by thread = " + Thread.currentThread());
		FileRepresentation result = null;
		Request request = getRequest();
		Form form = request.getResourceRef().getQueryAsForm();
		if(form.getValues("txt") != null)
		{
			txt = form.getValues("txt");
		}	
		if(form.getValues("token") != null)
		{
			token = form.getValues("token");
		}		
		if (token.equals(Main.token))
		{		
			result = Process(txt);		
		}
		else
		{
			result = new FileRepresentation(noAuthorityWave,MediaType.AUDIO_WAV);
		}	
		return result;
    }

	private FileRepresentation Process(String txt){		
		FileRepresentation result = new FileRepresentation(errorWave,MediaType.AUDIO_WAV);
		String waveFilePath = "";
		String txtFile = GenerateTxtFile(txt);		
		waveFilePath = wavePath + GenerateUid() + ".wav";
		String command = festivalHome + "text2wave " + txtFile + " -o "  + waveFilePath;
		if(ExcuteCommand(command))
		{
			result = new FileRepresentation(waveFilePath,MediaType.AUDIO_WAV);			
		}
		return result;
	}
	
	private String GenerateUid()
	{
		return UUID.randomUUID().toString();
	}
	
	private String GenerateTxtFile(String txt)
	{
		String fileName = "";
		String command = "";
		String uniqueID = GenerateUid();
		fileName = wavePath + uniqueID + ".txt";
		command = "echo " + "'" + txt + "'" + " > " + fileName;
		String[] commandLine = {"sh", "-c", command};
		if(ExcuteCommand(commandLine))
		{
			return fileName;
		}
		else 
		{
			return "";
		}
	}
	
	private boolean ExcuteCommand(String[] command) 
	{
		boolean result = false;
		Process p;
		try {
			p = Runtime.getRuntime().exec(command);
			p.waitFor();
			result = true;
		} catch (Exception e) {
			e.printStackTrace();
		}		
		return result;
	}
	
	private boolean ExcuteCommand(String command) 
	{
		boolean result = false;
		Process p;
		try {
			p = Runtime.getRuntime().exec(command);
			p.waitFor();
			result = true;
		} catch (Exception e) {
			e.printStackTrace();
		}		
		return result;
	}
}
